"clair:\n  database:\n    # Database driver\n    type: pgsql\n    options:\n      # PostgreSQL Connection string\n      # https://www.postgresql.org/docs/current/static/libpq-connect.html#LIBPQ-CONNSTRING\n      source: host={ \"Fn::GetAtt\" : [ \"RDSInstance\", \"Endpoint.Address\" ] } dbname=ClairDb user=postgres password={\"Ref\": \"DBPassword\"}\n\n      # Number of elements kept in the cache\n      # Values unlikely to change (e.g. namespaces) are cached in order to save prevent needless roundtrips to the database.\n      cachesize: 16384\n\n      # 32-bit URL-safe base64 key used to encrypt pagination tokens\n      # If one is not provided, it will be generated.\n      # Multiple clair instances in the same cluster need the same value.\n      paginationkey:\n\n  api:\n    # v3 grpc/RESTful API server address\n    addr: \"0.0.0.0:6060\"\n\n    # Health server address\n    # This is an unencrypted endpoint useful for load balancers to check to healthiness of the clair server.\n    healthaddr: \"0.0.0.0:6061\"\n\n    # Deadline before an API request will respond with a 503\n    timeout: 900s\n\n    # Optional PKI configuration\n    # If you want to easily generate client certificates and CAs, try the following projects:\n    # https://github.com/coreos/etcd-ca\n    # https://github.com/cloudflare/cfssl\n    servername:\n    cafile:\n    keyfile:\n    certfile:\n\n  worker:\n    namespace_detectors:\n      - os-release\n      - lsb-release\n      - apt-sources\n      - alpine-release\n      - redhat-release\n\n    feature_listers:\n      - apk\n      - dpkg\n      - rpm\n\n  updater:\n    # Frequency the database will be updated with vulnerabilities from the default data sources\n    # The value 0 disables the updater entirely.\n    interval: 2h\n    enabledupdaters:\n      - debian\n      - ubuntu\n      - rhel\n      - oracle\n      - alpine\n\n  notifier:\n    # Number of attempts before the notification is marked as failed to be sent\n    attempts: 3\n\n    # Duration before a failed notification is retried\n    renotifyinterval: 2h\n\n    http:\n      # Optional endpoint that will receive notifications via POST requests\n      endpoint:\n\n      # Optional PKI configuration\n      # If you want to easily generate client certificates and CAs, try the following projects:\n      # https://github.com/cloudflare/cfssl\n      # https://github.com/coreos/etcd-ca\n      servername:\n      cafile:\n      keyfile:\n      certfile:\n\n      # Optional HTTP Proxy: must be a valid URL (including the scheme).\n      proxy:"
